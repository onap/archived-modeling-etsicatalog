<?xml version="1.0"?>
<!--
    Copyright 2017 ZTE Corporation.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
	<groupId>org.onap.oparent</groupId>
        <artifactId>oparent</artifactId>
	<version>2.1.0</version>
	<relativePath/>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.onap.modeling.etsicatalog</groupId>
    <artifactId>modeling-etsicatalog</artifactId>
    <version>1.0.10-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>modeling-etsicatalog</name>
    <description>modeling etsicatalog</description>
    <properties>
	<maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>
	<docker.alias>${project.artifactId}</docker.alias>
	<docker.containerNamePattern>%a</docker.containerNamePattern>
	<docker.showLogs>true</docker.showLogs>
	<docker.name>nexus3.onap.org:10003/onap/modeling/etsicatalog</docker.name>
	<docker.tags.0>latest</docker.tags.0>
	<docker.tags.1>1.0.10-SNAPSHOT-latest</docker.tags.1>
	<docker.tags.2>1.0.10-STAGING-latest</docker.tags.2>
	<docker.tags.3>1.0.10-STAGING-${maven.build.timestamp}</docker.tags.3>
	<docker.dockerFile>${project.basedir}/docker/Dockerfile</docker.dockerFile>
	<docker.contextDir>${project.basedir}/</docker.contextDir>
	<docker.noCache>true</docker.noCache>
	<!-- <docker.buildArg.HTTPS_PROXY></docker.buildArg.HTTPS_PROXY> -->
	<!-- <docker.buildArg.HTTP_PROXY></docker.buildArg.HTTP_PROXY> -->
	<docker.buildArg.PKG_VERSION>1.0.10</docker.buildArg.PKG_VERSION>
	<docker.skip.save>true</docker.skip.save>
	<docker.envRun.DB_IP>127.0.0.1</docker.envRun.DB_IP>
	<docker.envRun.DB_PORT>3306</docker.envRun.DB_PORT>
	<!-- MSB - Microservice Bus, DMAAP - Data Movement as a Platform, SDC - Service Design and Creation -->
	<!-- <docker.envRun.NAME>etsictatalog</docker.envRun.NAME> -->
	<!-- <docker.envRun.USER>etsictatalog</docker.envRun.USER> -->
	<!-- <docker.envRun.PASSWD>etsictatalog</docker.envRun.PASSWD> -->
	<!-- <docker.envRun.MSB_ENABLED>false</docker.envRun.MSB_ENABLED> -->
	<!-- <docker.envRun.DMAAP_ENABLED>false</docker.envRun.DMAAP_ENABLED> -->
	<!-- <docker.envRun.SDC_ADDR></docker.envRun.SDC_ADDR> -->
	<!-- <docker.envRun.MSB_ADDR></docker.envRun.MSB_ADDR> -->
	<!-- <docker.envRun.DMAAP_ADDR></docker.envRun.DMAAP_ADDR> -->
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<sonar.sources>.</sonar.sources>
	<sonar.junit.reportsPath>xunit-results.xml</sonar.junit.reportsPath>
	<sonar.python.coverage.reportPaths>coverage.xml</sonar.python.coverage.reportPaths>
	<sonar.language>py</sonar.language>
	<sonar.pluginname>python</sonar.pluginname>
	<sonar.inclusions>**/**.py</sonar.inclusions>
	<sonar.exclusions>**/tests/**.py,**/test*.py</sonar.exclusions>
    </properties>
    <build>
      <pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <configuration>
              <executable>${project.basedir}/mvn-phase-script.sh</executable>
              <environmentVariables>
                <!-- make mvn properties as env for our script -->
                <MVN_PROJECT_GROUPID>${project.groupId}</MVN_PROJECT_GROUPID>
                <MVN_PROJECT_ARTIFACTID>${project.artifactId}</MVN_PROJECT_ARTIFACTID>
                <MVN_PROJECT_VERSION>${project.version}</MVN_PROJECT_VERSION>
              </environmentVariables>
            </configuration>
          </plugin>
        </plugins>
      </pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.2.1</version>
          <executions>
            <execution>
              <id>clean phase script</id>
              <phase>clean</phase>
              <goals>
                <goal>exec</goal>
              </goals>
              <configuration>
                <arguments>
                  <argument>__</argument>
                  <argument>clean</argument>
                </arguments>
              </configuration>
            </execution>
            <execution>
              <id>test script</id>
              <phase>test</phase>
              <goals>
                <goal>exec</goal>
              </goals>
              <configuration>
                <arguments>
                  <argument>__</argument>
                  <argument>test</argument>
                </arguments>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
                <appendAssemblyId>false</appendAssemblyId>
                <descriptors>
                    <descriptor>assembly.xml</descriptor>
                </descriptors>
            </configuration>
            <executions>
                <execution>
                    <id>make-assembly</id>
                    <phase>package</phase>
                    <goals>
                        <goal>single</goal>
                    </goals>
                </execution>
            </executions>
	</plugin>
        <plugin>
         <groupId>io.fabric8</groupId>
         <artifactId>docker-maven-plugin</artifactId>
         <version>0.35.0</version>
         <configuration>
          <images>
           <image>
            <external>
             <type>properties</type>
	     <prefix>docker</prefix>
	    </external>
           </image>
          </images>
         </configuration>
	 <executions>
	  <execution>
           <id>build</id>
	   <phase>install</phase>
	   <goals>
	    <goal>stop</goal>
            <goal>build</goal>
           </goals>
          </execution>
          <execution>
           <id>start</id>
           <phase></phase>
	   <goals>
            <goal>start</goal>
           </goals>
          </execution>
          <execution>
	   <id>stop</id>
	   <phase></phase>
           <goals>
            <goal>stop</goal>
           </goals>
          </execution>
          <execution>
           <id>push</id>
	   <phase>deploy</phase>
           <goals>
            <goal>push</goal>
           </goals>
          </execution>
         </executions>
        </plugin>
       </plugins>
    </build>
</project>
